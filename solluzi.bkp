#!/usr/local/bin/php
<?php

use Solluzi\Application\Minicli\App;
use Solluzi\Application\Minicli\CommandCall;
use Solluzi\Application\Minicli\HandlerCreator;
use Solluzi\Application\Minicli\MiddlewareCreator;
use Solluzi\Application\Minicli\ModelCreator;
use Solluzi\Application\Minicli\ModuleCreator;
use Solluzi\ORM\CreateMigration;
use Solluzi\ORM\ExecuteInDatabase;

if (php_sapi_name() !== 'cli') {
    exit;
}

require_once __DIR__ . '/bootstrap.php';

$app = new App(APP_CONSOLE);
$app->setSignature("php solluzi <command> <param or params, ex: [ user=name password=pass ]>");

$app->registerCommand("help", function (CommandCall $call) use ($app) {
    $app->printSignature();
});

$app->registerCommand("module:create", function (CommandCall $call) use ($app) {
    $class = new ModuleCreator();
    $class->run($call->subcommand);
});

$app->registerCommand("handler:create", function (CommandCall $call) use ($app) {
    $class = new HandlerCreator();
    $class->run($call->subcommand);
});

$app->registerCommand("middleware:create", function (CommandCall $call) use ($app) {
    $class = new MiddlewareCreator();
    $class->run($call->subcommand);
});

$app->registerCommand("model:create", function (CommandCall $call) use ($app) {
    $class = new ModelCreator();
    $class->run($call->subcommand);
});

$app->registerCommand("cache:clear", function (CommandCall $call) use ($app) {
    $output = shell_exec('rm -rf storage/cache/*');
    echo "$output";
});

$app->registerCommand("log:clear", function (CommandCall $call) use ($app) {
    $output = shell_exec('rm -rf storage/logs/*.log');
    echo "$output";
});

$app->registerCommand("all:clear", function (CommandCall $call) use ($app) {
    $output = shell_exec('rm -rf storage/cache/* && rm -rf storage/logs/*.log');
    echo "$output";
});

$app->registerCommand("migration:migrate", function (CommandCall $call) use ($app) {
    if (class_exists(ExecuteInDatabase::class)) {
        $class = new ExecuteInDatabase($call->subcommand);
        $class->run();
    }
});

$app->registerCommand("migration:create", function (CommandCall $call) use ($app) {
    if (class_exists(CreateMigration::class)) {
        $migration = new CreateMigration();
        $migration->create($call->subcommand);
    }
});

$app->registerCommand("permission:cache", function (CommandCall $call) use ($app) {
    if ($call->subcommand === 'default') {
        throw new Exception('Give the permission level (ex: php solluzi permission:cache 0777?');
    }

    $output = shell_exec('chmod -R ' . $call->subcommand . ' storage/cache');
    echo "$output";
});

$app->registerCommand("permission:log", function (CommandCall $call) use ($app) {
    if ($call->subcommand === 'default') {
        throw new Exception('Give the permission level (ex: php solluzi permission:log 0777?');
    }

    $output = shell_exec('chmod -R ' . $call->subcommand . ' storage/logs');
    echo "$output";
});

$app->registerCommand("framework:autoload", function (CommandCall $call) use ($app) {
    $output = shell_exec('composer autoload');
    echo "$output";
});

$app->registerCommand("framework:install", function (CommandCall $call) use ($app) {
    $output = shell_exec('composer install');
    echo "$output";
});

$app->runCommand($argv);
